<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Definitions xmlns="http://docs.oasis-open.org/tosca/ns/2011/12" xmlns:winery="http://www.opentosca.org/winery/extensions/tosca/2013/02/12" xmlns:selfservice="http://www.eclipse.org/winery/model/selfservice" xmlns:testwineryopentoscaorg="http://test.winery.opentosca.org" targetNamespace="http://opentosca.org/test/applications/servicetemplates" id="otsteIgeneral-MyTinyToDo-DockerEngine-BPMN-Test_w1-wip1">
    <ServiceTemplate name="MyTinyToDo-DockerEngine-BPMN-Test_w1-wip1" targetNamespace="http://opentosca.org/test/applications/servicetemplates" id="MyTinyToDo-DockerEngine-BPMN-Test_w1-wip1">
        <BoundaryDefinitions>
            <Interfaces>
                <Interface name="OpenTOSCA-Lifecycle-Interface">
                    <Operation name="initiate">
                        <Plan planRef="buildPlan"/>
                    </Operation>
                </Interface>
            </Interfaces>
        </BoundaryDefinitions>
        <TopologyTemplate>
            <NodeTemplate xmlns:otntyIgeneral="http://opentosca.org/nodetypes" name="DockerEngine_w1" minInstances="1" maxInstances="1" type="otntyIgeneral:DockerEngine_w1" id="DockerEngine_0" winery:x="991" winery:y="773">
                <Properties>
                    <Properties xmlns="http://www.example.org">
                        <DockerEngineURL>get_input: DockerEngineURL</DockerEngineURL>
                        <DockerEngineCertificate/>
                    </Properties>
                </Properties>
            </NodeTemplate>
            <NodeTemplate xmlns:otntyIgeneral="http://opentosca.org/example/applications/nodetypes" name="MyTinyToDoDockerContainer_w1" minInstances="1" maxInstances="1" type="otntyIgeneral:MyTinyToDoDockerContainer_w1" id="MyTinyToDoDockerContainer_0" winery:x="992" winery:y="117">
                <Properties>
                    <Properties xmlns="http://www.example.org">
                        <Port>get_input: ApplicationPort</Port>
                        <ContainerPort>80</ContainerPort>
                        <ContainerID/>
                        <ContainerIP/>
                        <ImageID/>
                        <ContainerMountPath/>
                        <HostMountFiles/>
                    </Properties>
                </Properties>
                <DeploymentArtifacts>
                    <DeploymentArtifact xmlns:otatyIgeneral="http://opentosca.org/artifacttypes" xmlns:otateIgeneral="http://opentosca.org/example/applications/artifacttemplates" name="MyTinyToDo_DA" artifactType="otatyIgeneral:DockerContainerArtifact" artifactRef="otateIgeneral:MyTinyToDo_DA-w1"/>
                </DeploymentArtifacts>
            </NodeTemplate>
            <RelationshipTemplate xmlns:ToscaBaseTypes="http://docs.oasis-open.org/tosca/ns/2011/12/ToscaBaseTypes" name="HostedOn" type="ToscaBaseTypes:HostedOn" id="con_HostedOn_0">
                <SourceElement ref="MyTinyToDoDockerContainer_0"/>
                <TargetElement ref="DockerEngine_0"/>
            </RelationshipTemplate>
        </TopologyTemplate>
        <Plans>
            <Plan id="buildPlan" name="buildPlan" planType="http://docs.oasis-open.org/tosca/ns/2011/12/PlanTypes/BuildPlan" planLanguage="http://www.omg.org/spec/BPMN/20100524/MODEL">
                <InputParameters>
                    <InputParameter name="instanceDataAPIUrl" type="String" required="yes"/>
                    <InputParameter name="OpenTOSCAContainerAPIServiceInstanceURL" type="String" required="yes"/>
                    <InputParameter name="CorrelationID" type="String" required="yes"/>
                    <InputParameter name="ApplicationPort" type="String" required="yes"/>
                    <InputParameter name="DockerEngineURL" type="String" required="yes"/>
                </InputParameters>
                <OutputParameters/>
                <PlanModelReference reference="../servicetemplates/http%253A%252F%252Fopentosca.org%252Fservicetemplates/MyTinyToDo_Bare_Docker_BPMN/plans/buildPlan/plan.zip"/>
            </Plan>
        </Plans>
    </ServiceTemplate>
</Definitions>
